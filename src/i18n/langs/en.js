export default {
  myHeaderTitle: 'Robot SDK development example',
  dialogTips: 'Reminder',
  dialogCancel: 'Cancel',
  dialogClose: 'Close',
  dialogOk: 'Confirm',
  leftMenuSDKInit: 'SDK initialization',
  leftMenuConnectRobot: 'Connected robot',
  leftMenuMapAndPosition: 'Map and location',
  leftMenuMapShowMap: 'Map display',
  leftMenuChangeMap: 'Switch map',
  leftMenuUpdateMap: 'Update map',
  leftMenuRealPose: 'Robot real-time state',
  leftMenuRelocation: 'Reposition',
  leftMenuRobotMove: 'Robot motion',
  leftMenuChangeMoveMode: 'Switch motion modes',
  leftMenuStep: 'Single step movement',
  leftMenuRocker: 'Double step motion (Rocker)',
  leftMenuMapTo: 'Point movement (map)',
  leftMenuPoiTo: 'Station fixed motion',
  leftMenuMultiPoiTo: 'Multisite motion',
  leftMenuGoHome: 'Return to charge',
  leftMenuSetSpeed: 'Set speed',
  leftMenuSetVolume: 'Set volume',
  leftMenuHardwareControl: 'Hardware control',
  leftMenuLightBelt: 'Light strip control',
  leftMenuBoxDoor: 'Door control',
  leftMenuSprayer: 'Sprayer control',
  leftMenuActionTask: 'Action task',
  leftMenuPoiAction: 'Site action task',
  leftMenuNumTask: 'Execute task according to number of times',
  loading: 'Loading...',
  toast: 'The system is busy, please try again later!',
  boxDoorControl: 'Robot door control',
  boxDoorControlTitle: 'Door control is currently only supported in hotel robots',
  boxDoorVerify: 'Door control verification',
  open1Door: 'Open door number 1',
  open2Door: 'Open door number 2',
  open3Door: 'Open door number 3',
  open4Door: 'Open door number 4',
  close1Door: 'Close door number 1',
  close2Door: 'Close door number 2',
  close3Door: 'Close door number 3',
  close4Door: 'Close door number 4',
  lightBeltControl: 'Light strip can be controlled in two ways',
  lightBeltSection: 'Sectional control (e.g. restaurant robot)',
  lightBeltSectionTitle: 'The light strip installed in the robot can be controlled section by section from top to bottom or from left to right',
  lightBeltFull: 'Complete control (e.g. disinfection robot)',
  lightBeltFullTitle: 'The light strip wraps around the robot, you can set the color of the light belt',
  sectionControlVerify: 'Segment light strip control verification',
  redLight1: 'Red light segment 1',
  greenLight2: 'Green light segment 2',
  blueLight3: 'Blue light segment 3',
  yellowLight4: 'Yellow light segment 4',
  closeLight1: 'Close segment 1',
  closeLight2: 'Close segment 2',
  closeLight3: 'Close segment 3',
  closeLight4: 'Close segment 4',
  fullControlVerify: 'Complete light strip control verification',
  redLight: 'Red light',
  greenLight: 'Green light',
  blueLight: 'Blue light',
  yellowLight: 'Yellow light',
  closeLight: 'Close light',
  sprayerControl: 'Robot sprayer control',
  sprayerControlTitle: 'Sprayer control is currently only supported in disinfection robots',
  sprayerControlVerify: 'Sprayer control verification',
  sprayer1: 'Sprayer level 1',
  sprayer2: 'Sprayer level 2',
  sprayer3: 'Sprayer level 3',
  sprayer4: 'Sprayer level 4',
  sprayer5: 'Sprayer level 5',
  sprayerClose: 'Shutoff sprayer',
  currentMap: 'Current map',
  changeMap: 'Switch map',
  manual: 'Manual',
  remote: 'Remote control',
  emergencyStop: 'Emergency stop',
  obstacle: 'Obstacle',
  performTask: 'In a task',
  goHome: 'Go to charge',
  charing: 'Charging',
  isAbnormal: 'Abnormal or not',
  electricity: 'Battery',
  speed: 'Speed',
  yes: 'Yes',
  no: 'No',
  exist: 'Yes',
  none: 'N/A',
  goHomeSelectCharge: 'Select charging station and go to charge',
  selectCharge: 'Select charging station',
  type: 'Type',
  clickMapTo: 'Click on the map to move the robot',
  autoMode: 'Auto mode',
  manualMode: 'Manual mode',
  emergencyStopMode: 'Emergency stop mode',
  cancelEmergencyStop: 'Cancel emergency stop',
  selectPoiMoveRobot: 'Choose Poi to move robot',
  selectPoiM: 'Select a site (multiple)',
  selectPoi: 'Select a site',
  rockerTitle: 'The two-step motion of the robot is to continuously control the angular velocity and linear velocity of the robot at the same time',
  noObstacleMove: 'No obstacle avoidance movement',
  noObstacleMoveTitle: 'In the control of no obstacle avoidance motion, it is necessary to pay attention to the safety of robot motion and avoid collision',
  angularVelocity: 'Angular velocity',
  angularVelocityTitle: 'When the number is negative, the robot turns right, and when the number is positive, the robot turns left, and the maximum angular velocity is limited to 0.5r/s',
  lineVelocity: 'Linear velocity',
  lineVelocityTitle: 'When the number is negative, the robot retreats, and when the number is positive, the robot advances. The maximum limit of the backward is 0.2m/s, and the maximum limit of the forward is 0.5m/s',
  twoStepMove: 'Two-step motion verification',
  selectSpeed: 'Please select speed',
  selectVolume: 'Please select volume',
  stepTitle: 'The single-step movement of the robot is to control the angular velocity and linear velocity of the robot at one time respectively',
  stepMove: 'Single motion verification',
  numTaskByRobot: 'The robot performs the task according to the number of times',
  selectNum: 'Select frequency',
  forEach: 'Circulation',
  bout: 'time(s)',
  selectTaskNum: 'Select task execution times',
  bout1: '1',
  bout2: '2',
  bout3: '3',
  bout5: '5',
  bout8: '8',
  poiActionTitle: 'The robot moves to the site and completes the job',
  selectPoiAndAction: 'Select the site and set the action',
  setPoiAction: 'Set site action',
  poiAction1: 'Play the specified voice repeatedly (10s per interval)',
  poiAction2: 'Open the door (HMI requires to continue the task)',
  poiAction3: 'Stay 1 minute',
  poiAction4: 'Turn on sprayer level 4',
  poiAction5: 'Shutoff sprayer',
  poiAction6: 'Stop voice',
  connectTitle: 'According to the SDK initialization pattern, the connection of the robot is',
  connectWanAPP: "The robot ID must be specified or one of the online machines of the SDK's choice must be connected",
  connectLocalAPP: 'The SDK obtains the robot ID and connects with it',
  connectLanAPP: 'A machine on the same LAN is specified or obtained by the SDK for connection',
  robotConnectVerify: 'Robot connection verification',
  connectRobotId: 'Robot ID',
  inputConnectRobotId: 'Please enter robot ID',
  connectVerify: 'Connection verification',
  initTitle: 'There are three methods for SDK initialization',
  initWanApp: 'WAN mode, mainly for WeChat mini programs, mobile App, PC web, etc',
  initLocalApp: 'Local mode, mainly for the robot upper computer terminal App',
  initLanApp: 'LAN mode, applies to mobile terminals (such as pads and mobile phones) on the Wi-Fi',
  initAuth: 'The SDK initializes the authentication parameters',
  initAuth1: 'App ID, you can apply to the relevant operators',
  initAuth2: 'Data request keys, you can apply to the relevant operators',
  initVerify: 'SDK initialization verification',
  initInputAppId: 'Please enter appId',
  initInputAppSecret: 'Please enter appSecret'
}
